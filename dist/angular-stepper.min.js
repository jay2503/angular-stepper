/*! angular-stepper - v1.0.0 - 2017-08-06
* Copyright (c) Julien Bouquillon <julien@revolunet.com> 2017; Licensed  */
angular.module("revolunet.stepper",[]).directive("rnStepper",function(){return{restrict:"AE",require:"ngModel",scope:{min:"=",max:"=",ngModel:"=",onChange:"&",item:"=",ngReadonly:"="},template:'<button type="button" ng-disabled="isOverMin()" ng-click="decrement()">-</button><input type="text" ng-model="ngModel" ng-readonly="true"><button type="button" ng-disabled="isOverMax()" ng-click="increment()">+</button>',link:function(a,b,c,d){function e(){var b=!(a.isOverMin(!0)||a.isOverMax(!0));d.$setValidity("outOfBounds",b)}function f(b){d.$setViewValue(d.$viewValue+b),d.$render(),console.log("Stepper Value Change"),console.log(a.onChange),a.onChange({item:a.item})}a.label="",angular.isDefined(c.label)&&c.$observe("label",function(b){a.label=" "+b,d.$render()}),d.$render=function(){e()},d.$formatters.push(function(a){return parseInt(a,10)}),d.$parsers.push(function(a){return parseInt(a,10)}),a.isOverMin=function(b){if(a.ngReadonly)return!0;var c=b?0:1;return angular.isDefined(a.min)&&d.$viewValue-c<parseInt(a.min,10)},a.isOverMax=function(b){if(a.ngReadonly)return!0;var c=b?0:1;return angular.isDefined(a.max)&&d.$viewValue+c>parseInt(a.max,10)},a.increment=function(){f(1)},a.decrement=function(){f(-1)},e(),a.$watch("min+max",function(){e()}),a.onChange({item:a.item})}}});